name: CI

on:
  pull_request:
  push:
    branches: [refit/mvp-skeleton, main, staging]

jobs:
  validate-schema:
    name: Validate Schema & Migrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Prisma generate
        run: npm run prisma:generate
      - name: Validate migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run validate:migrations
        continue-on-error: true
      - name: Validate schema compatibility
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run validate:schema

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: validate-schema
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Clean Next cache
        run: npm run clean:next
      - name: Prisma generate
        run: npm run prisma:generate
      - name: Apply migrations (Supabase Cloud)
        if: ${{ env.SUPABASE_DB_URL != '' }}
        env:
          DATABASE_URL: ${{ env.SUPABASE_DB_URL }}
        run: npm run prisma:migrate:deploy
      - name: Seed DB (Supabase Cloud)
        if: ${{ env.SUPABASE_DB_URL != '' }}
        env:
          DATABASE_URL: ${{ env.SUPABASE_DB_URL }}
        run: npm run seed
      - name: Lint
        run: npm run lint --if-present
      - name: Typecheck
        run: npm run typecheck --if-present
      - name: Build
        run: npm run build --if-present
      - name: Unit tests
        env:
          SUPABASE_DB_URL: ${{ env.SUPABASE_DB_URL }}
          DATABASE_URL: ${{ env.SUPABASE_DB_URL }}
        run: npm run test --if-present
      - name: E2E (placeholder)
        run: npm run e2e --if-present
