name: Deploy to Staging

on:
  push:
    branches: [staging, dev]
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging  # Uses GitHub environment for secrets and protection

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Apply migrations to staging database
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          echo "📦 Applying migrations to staging database..."
          npm run prisma:migrate:deploy
          echo "✅ Migrations applied successfully"

      - name: Verify schema synchronization
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
        run: |
          echo "🔍 Verifying schema matches Prisma schema..."
          node scripts/test-schema.mjs
          echo "✅ Schema verification passed"

      - name: Deploy to Vercel Staging
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "🚀 Deploying to Vercel staging..."
          npm i -g vercel@latest
          vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
          vercel build --token=$VERCEL_TOKEN
          vercel deploy --prebuilt --token=$VERCEL_TOKEN > deployment-url.txt
          echo "DEPLOYMENT_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV
          echo "✅ Deployment complete"

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 Staging deployment complete!\n\n**Deployment URL:** ${process.env.DEPLOYMENT_URL}\n\n✅ Migrations applied\n✅ Schema verified`
            })

      - name: Summary
        run: |
          echo "## 🎉 Staging Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Migrations applied to staging database" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Schema verification passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Deployed to Vercel staging" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment URL:** ${DEPLOYMENT_URL}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Test the staging deployment" >> $GITHUB_STEP_SUMMARY
          echo "2. Run smoke tests" >> $GITHUB_STEP_SUMMARY
          echo "3. If all looks good, merge to main for production deployment" >> $GITHUB_STEP_SUMMARY
