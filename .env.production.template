# ==============================================================================
# PRODUCTION ENVIRONMENT - Vercel Environment Variables
# ==============================================================================
# ⚠️  CRITICAL: Use PRODUCTION Supabase credentials only!
# ⚠️  NEVER use staging/dev credentials in production!
# Copy these to Vercel Dashboard → Project Settings → Environment Variables
# Select "Environment: Production" for each variable
# ==============================================================================

# Supabase Configuration (get from Supabase Dashboard → Project Settings → API)
NEXT_PUBLIC_SUPABASE_URL=https://YOUR_PRODUCTION_PROJECT_REF.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGci...YOUR_PRODUCTION_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY=eyJhbGci...YOUR_PRODUCTION_SERVICE_ROLE_KEY

# Database URL (use connection pooler for better performance)
# Format: postgresql://postgres.PROJECT_REF:PASSWORD@aws-0-REGION.pooler.supabase.com:6543/postgres
SUPABASE_DB_URL=postgresql://postgres.YOUR_PRODUCTION_PROJECT_REF:YOUR_DB_PASSWORD@aws-0-us-west-1.pooler.supabase.com:6543/postgres
DATABASE_URL=${SUPABASE_DB_URL}

# Security - Generate a DIFFERENT random string for production (min 32 characters)
# You can generate one with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
# ⚠️  MUST BE DIFFERENT FROM STAGING!
SHARE_LINK_PEPPER=YOUR_PRODUCTION_RANDOM_STRING_HERE

# OpenAI API (consider using separate API key for production with usage limits)
OPENAI_API_KEY=sk-proj-...YOUR_PRODUCTION_OPENAI_KEY
OPENAI_MODEL_INTERPRET=gpt-4o
OPENAI_MODEL_SUMMARY=gpt-4o-mini
OPENAI_MODEL_EXPLAIN_IMAGE=gpt-4o
OPENAI_MODEL_IMAGE_LIGHT=gpt-4o-mini
OPENAI_MODEL_NANO=gpt-4o-mini
OPENAI_MODEL_EMBED=text-embedding-3-small
OPENAI_MAX_TOKENS_SUMMARY=800
OPENAI_MAX_TOKENS_INTERPRET=3000
OPENAI_ORG_ID=org-...YOUR_ORG_ID
OPENAI_PROJECT_ID=proj_...YOUR_PRODUCTION_PROJECT_ID
OPENAI_STREAM=true

# PDF Extraction Service
PDF_EXTRACT_URL=https://pdf-extractor-927839796089.europe-west3.run.app/extract
PDF_EXTRACT_BEARER=YOUR_PDF_BEARER_TOKEN
PDF_EXTRACT_TIMEOUT_MS=20000
PDF_USE_PDFJS_FALLBACK=false
PDF_MAX_BYTES=50000000
PDF_DEBUG=false

# Optional: Google/Gemini (if needed)
GOOGLE_API_KEY=YOUR_GOOGLE_API_KEY

# Optional: MedGemma (if using)
MEDGEMMA_API_URL=YOUR_MEDGEMMA_URL
MEDGEMMA_B4_URL=YOUR_MEDGEMMA_B4_URL
MEDGEMMA_B27_URL=YOUR_MEDGEMMA_B27_URL
MEDGEMMA_DEFAULT_MODEL=b4
MEDGEMMA_AUTH_SCHEME=bearer
MEDGEMMA_TOKEN=YOUR_HF_TOKEN
MEDGEMMA_TIMEOUT_MS=90000

# ==============================================================================
# PRODUCTION CHECKLIST
# ==============================================================================
# Before going live:
# [ ] Different SHARE_LINK_PEPPER than staging
# [ ] Separate OpenAI API key with rate limits
# [ ] Tested all migrations in staging first
# [ ] Supabase backups enabled (automatic daily)
# [ ] Vercel protection disabled (was used in staging)
# [ ] Monitoring/alerting configured (Sentry, etc.)
# [ ] RLS policies reviewed and tested
# [ ] Storage bucket 'documents' created
# [ ] Storage RLS policies applied
# [ ] All secrets rotated from any public repos
# [ ] DNS configured and SSL certificate active
# [ ] Terms of Service and Privacy Policy links added
# ==============================================================================

# ==============================================================================
# How to add these to Vercel:
# ==============================================================================
# 1. Go to: https://vercel.com/your-team/evermed-production/settings/environment-variables
# 2. For each variable above:
#    - Click "Add New"
#    - Name: Copy the variable name (e.g., NEXT_PUBLIC_SUPABASE_URL)
#    - Value: Fill in the actual value
#    - Environment: Select "Production"
#    - Click "Save"
# 3. After adding all variables, trigger a new deployment from main branch
# ==============================================================================
